"""
Django settings for Site project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path
import dj_database_url
from django.conf.urls import include
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-xe7r&zuw1scx11qh)obx(d)v432k2n^#uzn2e=z8so$bdun0vs'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = ['0.0.0.0', 'localhost', '156.67.210.119','https://admissionsquare.in','admissionsquare.in','https://fra1.digitaloceanspaces.com/admassistant']

CSRF_TRUSTED_ORIGINS=['https://admissionsquare.in',]
CORS_ORIGIN_ALLOW_ALL = False
CORS_ORIGIN_WHITELIST = (
  'http://localhost:8000', 'https://admissionsquare.in',
)
# Application definition

INSTALLED_APPS = [
    'tinymce',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'corsheaders',
    'storages',
    'Site',
    'Connect',
]
SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]



ROOT_URLCONF = 'Site.urls'
TEMPLATES_DIR = os.path.join(BASE_DIR, "templates")
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR,],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'Site.context_processors.settings',
                'Site.context_processors.country_locations',
                'Site.context_processors.providers',
                'Site.context_processors.providers_courses',  
                'Site.context_processors.faqs',                
            ],
        },
    },
]

WSGI_APPLICATION = 'Site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {   
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('MYSQL_DATABASE','admassist'),
        'USER': os.getenv('MYSQL_USER','root'),
        #'USER': os.environ.get('MYSQL_USER', 'mysql'),
        'PASSWORD': os.getenv('MYSQL_PASSWORD','1234'),
        'HOST': os.getenv('MYSQL_DATABASE_HOST','localhost'),
        #'HOST': os.environ.get('MYSQL_DATABASE_HOST', 'db'),
        'PORT': os.getenv('MYSQL_DATABASE_PORT',3306),
    }
}

db_from_env = dj_database_url.config(conn_max_age=600)
DATABASES['default'].update(db_from_env)

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'codesquaretest@gmail.com'
EMAIL_HOST_PASSWORD = 'vbidshructzjpkcy'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
USE_SPACES = config('USE_SPACES', default=False, cast=bool)
#production
if not DEBUG:
    DATABASES = {   
    'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': os.getenv('MYSQL_DATABASE','admassist'),
            'USER': os.getenv('MYSQL_USER','root'),
            #'USER': os.environ.get('MYSQL_USER', 'mysql'),
            'PASSWORD': os.getenv('MYSQL_PASSWORD','1234'),
            'HOST': os.getenv('MYSQL_DATABASE_HOST','localhost'),
            #'HOST': os.environ.get('MYSQL_DATABASE_HOST', 'db'),
            'PORT': os.getenv('MYSQL_DATABASE_PORT',3306),
        }
    }
    STATIC_URL = '/static/'
    STATIC_ROOT = '/home/admissionsquare.in/public_html/static'
    MEDIA_URL = '/media/'
    MEDIA_ROOT = '/home/admissionsquare.in/public_html/media' 
else:    
    if USE_SPACES:
        # settings
        AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
        AWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')
        AWS_DEFAULT_ACL = 'public-read'
        AWS_S3_ENDPOINT_URL = os.getenv('AWS_S3_ENDPOINT_URL')
        AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}
        # static settings
        AWS_LOCATION = 'static'
        MEDIA_LOCATION = 'media'
        STATIC_URL = f'{AWS_S3_ENDPOINT_URL}/{AWS_STORAGE_BUCKET_NAME}/{AWS_LOCATION}/'
        MEDIA_URL = f'{AWS_S3_ENDPOINT_URL}/{AWS_STORAGE_BUCKET_NAME}/{MEDIA_LOCATION}/'
        #STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage' 
        
        STATICFILES_STORAGE = 'storage_backends.StaticStorage'
        DEFAULT_FILE_STORAGE = 'storage_backends.MediaStorage'   
    else:   
        STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
        #location where django collect all static files   
        STATIC_URL = '/static/' 
        STATIC_ROOT = os.path.join(BASE_DIR,"staticfiles/")    
        MEDIA_URL = '/media/'
        MEDIA_ROOT = os.path.join(BASE_DIR,"media/") 
    
    STATICFILES_DIRS = [os.path.join(BASE_DIR ,"static")]

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
#TINYMCE_JS_URL = "https://cdnjs.cloudflare.com/ajax/libs/tinymce/6.0.3/tinymce.min.js"#os.path.join(STATIC_URL, "tinymce/tinymce.min.js")
#TINYMCE_JS_ROOT = os.path.join(STATIC_ROOT, "tinymce")

TINYMCE_DEFAULT_CONFIG = {
    "height": "320px",
    "width": "900px",
    "menubar": "file edit view insert format tools table help",
    "plugins": "advlist autolink lists link image charmap print preview anchor searchreplace visualblocks code "
    "fullscreen insertdatetime media table paste code help wordcount spellchecker",
    "toolbar": "undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft "
    "aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor "
    "backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | "
    "fullscreen  preview save print | insertfile image media pageembed template link anchor codesample | "
    "a11ycheck ltr rtl | showcomments addcomment code",
    "custom_undo_redo_levels": 10,
    "language": "en_EU",  # To force a specific language instead of the Django current language.
}
#caching 
# https://devcenter.heroku.com/articles/django-memcache  
"""def get_cache():    
  try:
    servers = os.environ['MEMCACHIER_SERVERS']
    username = os.environ['MEMCACHIER_USERNAME']
    password = os.environ['MEMCACHIER_PASSWORD']
    return {
      'default': {
        'BACKEND': 'django.core.cache.backends.memcached.PyLibMCCache',
        # TIMEOUT is not the connection timeout! It's the default expiration
        # timeout that should be applied to keys! Setting it to `None`
        # disables expiration.
        'TIMEOUT': None,
        'LOCATION': servers,
        'OPTIONS': {
          'binary': True,
          'username': username,
          'password': password,
          'behaviors': {
            # Enable faster IO
            'no_block': True,
            'tcp_nodelay': True,
            # Keep connection alive
            'tcp_keepalive': True,
            # Timeout settings
            'connect_timeout': 2000, # ms
            'send_timeout': 750 * 1000, # us
            'receive_timeout': 750 * 1000, # us
            '_poll_timeout': 2000, # ms
            # Better failover
            'ketama': True,
            'remove_failed': 1,
            'retry_timeout': 2,
            'dead_timeout': 30,
          }
        }
      }
    }
  except:
    return {
      'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache'
      }
    }

CACHES = get_cache()"""